# ================================
# CHICOJ RESTAURANT SYSTEM
# Configuración de Variables de Entorno
# ================================

# ============ BASE DE DATOS ============
POSTGRES_USER=postgres
POSTGRES_PASSWORD=TU_PASSWORD_SEGURO_AQUI
POSTGRES_DB=restaurante_db

# Puedes usar este formato o construir tu propio DATABASE_URL
# DATABASE_URL se construye automáticamente en docker-compose.yml

# ============ BACKEND / API ============
NODE_ENV=production
JWT_SECRET=TU_JWT_SECRET_SUPER_SEGURO_AQUI_MINIMO_32_CARACTERES
JWT_EXPIRES_IN=7d
BCRYPT_ROUNDS=10

# CORS - Dominios permitidos (separados por coma)
# Ejemplo: http://tusitio.com,https://tusitio.com,http://www.tusitio.com
ALLOWED_ORIGINS=http://coopechicoj.com,https://coopechicoj.com,http://www.coopechicoj.com,https://www.coopechicoj.com

# ============ PUERTOS ============
# Puerto para acceso HTTP (normalmente 80 en producción)
HTTP_PORT=80

# Puerto para acceso HTTPS (normalmente 443 en producción)
HTTPS_PORT=443

# Puerto del frontend (interno, no expongas esto)
FRONTEND_PORT=8080

# ============ PGADMIN (OPCIONAL - SOLO DESARROLLO) ============
PGADMIN_PORT=5050
PGADMIN_EMAIL=admin@coopechicoj.com
PGADMIN_PASSWORD=TU_PASSWORD_PGADMIN

# ============ SSL / DOMINIO (PARA PRODUCCIÓN) ============
# Configura esto cuando tengas un dominio
DOMAIN=coopechicoj.com
SSL_EMAIL=tu-email@gmail.com

# ============ CONFIGURACIÓN ADICIONAL ============
# URL del API para el frontend (debe coincidir con tu dominio)
# En desarrollo: http://localhost:3000
# En producción: https://coopechicoj.com
API_URL=https://coopechicoj.com

# ============ NOTAS IMPORTANTES ============
#
# 1. NUNCA subas el archivo .env a git
# 2. Cambia TODAS las contraseñas por valores seguros
# 3. JWT_SECRET debe ser una cadena aleatoria larga (mínimo 32 caracteres)
# 4. Para generar un JWT_SECRET seguro, puedes usar:
#    node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# 5. ALLOWED_ORIGINS debe incluir todos los dominios desde donde se accederá
# 6. En producción, configura NODE_ENV=production
#

